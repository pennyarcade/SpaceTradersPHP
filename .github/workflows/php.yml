name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: ncurses-https://github.com/OOPS-ORG-PHP/mod_ncurses.git@v1.0.2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Lint PHP
      # You may pin to the exact commit or the version.
      # uses: Firehed/lint-php-action@4e424397e74b38eae09f1cc32621c2f2a65e537a
      uses: Firehed/lint-php-action@v1
      
    - name: PHP Code Sniffer (php-actions)
      # You may pin to the exact commit or the version.
      # uses: php-actions/phpcs@dfdd77a6edfc6d0d0f194bdf0c934c8d841ea2fa
      uses: php-actions/phpcs@v1.0.0
      #with:
        # What version of PHPCS to use
        #version: # optional, default is latest
        # What version of PHP to use
        #php_version: # optional, default is latest
        # Path to a vendored phpcs binary
        #vendored_phpcs_path: # optional
        # One or more files and/or directories to check
        #path:
        # The name or path of the coding standard to use
        #standard:
        # A comma separated list of sniff codes to include checking (all sniffs must be part of the specified standard)
        #sniffs: # optional
        # A comma separated list of sniff codes to exclude from checking (all sniffs must be part of the specified standard)
        #exclude: # optional
        # A comma separated list of patterns to ignore files and directories
        #ignore: # optional
        # The number of spaces each tab represents
        #tab_width: # optional
        # Print either the "full", "xml", "checkstyle", "csv", "json", "junit", "emacs", "source", "summary", "diff", "svnblame", "gitblame", "hgblame" or "notifysend" report, or specify the path to a custom report class, (the "full" report is printed by default)
        #report: # default is full
        # Write the report to the specified file path
        #report_file: # optional
        # How many columns wide screen reports should be printed or set to "auto" to use current screen width, where supported
        #report_width: # optional
        # A path to strip from the front of file paths inside reports
        #basepath: # optional
        # A comma separated list of files to run before processing begins
        #bootstrap: # optional
        # The encoding of the files being checked (default is utf-8)
        #encoding: # optional
        # A comma separated list of file extensions to check. The type of the file can be specified using: ext/type e.g., module/php,es/js
        #extensions: # optional
        # The minimum severity required to display an error or warning
        #severity: # optional
        # The minimum severity required to display an error
        #error_severity: # optional
        # The minimum severity required to display a warning
        #warning_severity: # optional
        # Extra arguments to pass to the phpcs binary
        #args: # optional

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md
    - name: Run test suite
      run: composer run-script test
